import Gaffer
import GafferDispatch
import GafferImage
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 60, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["PythonCommand"] = GafferDispatch.PythonCommand( "PythonCommand" )
parent.addChild( __children["PythonCommand"] )
__children["PythonCommand"]["dispatcher"].addChild( Gaffer.Plug( "deadline1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand"]["dispatcher"].addChild( Gaffer.Plug( "deadline2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand"]["dispatcher"].addChild( Gaffer.Plug( "deadline3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand"]["dispatcher"].addChild( Gaffer.Plug( "deadline4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand"]["dispatcher"].addChild( Gaffer.Plug( "deadline5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand"]["dispatcher"].addChild( Gaffer.Plug( "deadline6", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand"]["dispatcher"].addChild( Gaffer.Plug( "deadline7", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"] = GafferDispatch.PythonCommand( "PythonCommand1" )
parent.addChild( __children["PythonCommand1"] )
__children["PythonCommand1"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"]["dispatcher"].addChild( Gaffer.Plug( "deadline1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"]["dispatcher"].addChild( Gaffer.Plug( "deadline2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"]["dispatcher"].addChild( Gaffer.Plug( "deadline3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"]["dispatcher"].addChild( Gaffer.Plug( "deadline4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"]["dispatcher"].addChild( Gaffer.Plug( "deadline5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"]["dispatcher"].addChild( Gaffer.Plug( "deadline6", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"]["dispatcher"].addChild( Gaffer.Plug( "deadline7", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestDependencies"] = GafferDispatch.TaskList( "TestDependencies" )
parent.addChild( __children["TestDependencies"] )
__children["TestDependencies"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestDependencies"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestDependencies"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestDependencies"]["postTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "postTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestDependencies"]["dispatcher"].addChild( Gaffer.Plug( "deadline1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestDependencies"]["dispatcher"].addChild( Gaffer.Plug( "deadline2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestDependencies"]["dispatcher"].addChild( Gaffer.Plug( "deadline3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestDependencies"]["dispatcher"].addChild( Gaffer.Plug( "deadline4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestDependencies"]["dispatcher"].addChild( Gaffer.Plug( "deadline5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestDependencies"]["dispatcher"].addChild( Gaffer.Plug( "deadline6", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestDependencies"]["dispatcher"].addChild( Gaffer.Plug( "deadline7", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestDependencies"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand2"] = GafferDispatch.PythonCommand( "PythonCommand2" )
parent.addChild( __children["PythonCommand2"] )
__children["PythonCommand2"]["dispatcher"].addChild( Gaffer.Plug( "deadline1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand2"]["dispatcher"].addChild( Gaffer.Plug( "deadline2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand2"]["dispatcher"].addChild( Gaffer.Plug( "deadline3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand2"]["dispatcher"].addChild( Gaffer.Plug( "deadline4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand2"]["dispatcher"].addChild( Gaffer.Plug( "deadline5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand2"]["dispatcher"].addChild( Gaffer.Plug( "deadline6", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand2"]["dispatcher"].addChild( Gaffer.Plug( "deadline7", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand3"] = GafferDispatch.PythonCommand( "PythonCommand3" )
parent.addChild( __children["PythonCommand3"] )
__children["PythonCommand3"]["dispatcher"].addChild( Gaffer.Plug( "deadline1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand3"]["dispatcher"].addChild( Gaffer.Plug( "deadline2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand3"]["dispatcher"].addChild( Gaffer.Plug( "deadline3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand3"]["dispatcher"].addChild( Gaffer.Plug( "deadline4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand3"]["dispatcher"].addChild( Gaffer.Plug( "deadline5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand3"]["dispatcher"].addChild( Gaffer.Plug( "deadline6", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand3"]["dispatcher"].addChild( Gaffer.Plug( "deadline7", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables"] = GafferDispatch.TaskContextVariables( "TaskContextVariables" )
parent.addChild( __children["TaskContextVariables"] )
__children["TaskContextVariables"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables"]["dispatcher"].addChild( Gaffer.Plug( "deadline1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables"]["dispatcher"].addChild( Gaffer.Plug( "deadline2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["TaskContextVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables1"] = GafferDispatch.TaskContextVariables( "TaskContextVariables1" )
parent.addChild( __children["TaskContextVariables1"] )
__children["TaskContextVariables1"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables1"]["dispatcher"].addChild( Gaffer.Plug( "deadline1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables1"]["dispatcher"].addChild( Gaffer.Plug( "deadline2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables1"]["dispatcher"].addChild( Gaffer.Plug( "deadline3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables1"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["TaskContextVariables1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FrameMask"] = GafferDispatch.FrameMask( "FrameMask" )
parent.addChild( __children["FrameMask"] )
__children["FrameMask"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FrameMask"]["dispatcher"].addChild( Gaffer.Plug( "deadline1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FrameMask"]["dispatcher"].addChild( Gaffer.Plug( "deadline2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FrameMask"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestCpuThread"] = GafferDispatch.PythonCommand( "TestCpuThread" )
parent.addChild( __children["TestCpuThread"] )
__children["TestCpuThread"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TestGpuAffinity"] = GafferDispatch.PythonCommand( "TestGpuAffinity" )
parent.addChild( __children["TestGpuAffinity"] )
__children["TestGpuAffinity"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"] = Gaffer.Backdrop( "Backdrop2" )
parent.addChild( __children["Backdrop2"] )
__children["Backdrop2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 39483 )
parent["variables"]["member1"]["name"].setValue( 'changeset' )
parent["variables"]["member1"]["value"].setValue( 49 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["PythonCommand"]["dispatcher"]["batchSize"].setValue( 10 )
__children["PythonCommand"]["dispatcher"]["deadline"]["group"].setValue( 'workstation' )
__children["PythonCommand"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Nothing' )
__children["PythonCommand"]["dispatcher"]["deadline"]["dependencyMode"].setValue( 'Auto' )
__children["PythonCommand"]["command"].setValue( 'print "task1 {}".format(context["frame"])' )
__children["PythonCommand"]["__uiPosition"].setValue( imath.V2f( -9.13885307, -11.8646297 ) )
__children["PythonCommand1"]["preTasks"][0].setInput( __children["PythonCommand"]["task"] )
__children["PythonCommand1"]["dispatcher"]["batchSize"].setValue( 5 )
__children["PythonCommand1"]["dispatcher"]["deadline"]["group"].setValue( 'workstation' )
__children["PythonCommand1"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Nothing' )
__children["PythonCommand1"]["dispatcher"]["deadline"]["dependencyMode"].setValue( 'Auto' )
__children["PythonCommand1"]["command"].setValue( 'print "task2 {}".format(context["frame"])' )
__children["PythonCommand1"]["__uiPosition"].setValue( imath.V2f( -8.44070244, -20.0287018 ) )
__children["TestDependencies"]["preTasks"][0].setInput( __children["PythonCommand1"]["task"] )
__children["TestDependencies"]["preTasks"][1].setInput( __children["FrameMask"]["task"] )
__children["TestDependencies"]["preTasks"][2].setInput( __children["TaskContextVariables1"]["task"] )
__children["TestDependencies"]["postTasks"][0].setInput( __children["PythonCommand3"]["task"] )
__children["TestDependencies"]["dispatcher"]["deadline"]["group"].setValue( 'workstation' )
__children["TestDependencies"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Nothing' )
__children["TestDependencies"]["dispatcher"]["deadline"]["dependencyMode"].setValue( 'Auto' )
__children["TestDependencies"]["__uiPosition"].setValue( imath.V2f( 8.68742371, -49.6018524 ) )
__children["PythonCommand2"]["dispatcher"]["batchSize"].setValue( 10 )
__children["PythonCommand2"]["dispatcher"]["deadline"]["group"].setValue( 'workstation' )
__children["PythonCommand2"]["dispatcher"]["deadline"]["limits"].setValue( 'vray' )
__children["PythonCommand2"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Archive' )
__children["PythonCommand2"]["dispatcher"]["deadline"]["dependencyMode"].setValue( 'Auto' )
__children["PythonCommand2"]["command"].setValue( 'print "task3 {}: {}".format(context["frame"], context["variation"])\n' )
__children["PythonCommand2"]["__uiPosition"].setValue( imath.V2f( 25.0260391, -3.909657 ) )
__children["PythonCommand3"]["dispatcher"]["deadline"]["group"].setValue( 'workstation' )
__children["PythonCommand3"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Nothing' )
__children["PythonCommand3"]["dispatcher"]["deadline"]["dependencyMode"].setValue( 'Auto' )
__children["PythonCommand3"]["command"].setValue( 'print "frame: {}".format(context["frame"])' )
__children["PythonCommand3"]["__uiPosition"].setValue( imath.V2f( 44.4874077, -34.3202438 ) )
__children["TaskContextVariables"]["preTasks"][0].setInput( __children["PythonCommand2"]["task"] )
__children["TaskContextVariables"]["dispatcher"]["batchSize"].setValue( 2 )
__children["TaskContextVariables"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Nothing' )
__children["TaskContextVariables"]["dispatcher"]["deadline"]["dependencyMode"].setValue( 'Auto' )
__children["TaskContextVariables"]["variables"]["member1"]["name"].setValue( 'variation' )
__children["TaskContextVariables"]["variables"]["member1"]["value"].setValue( 'blue' )
__children["TaskContextVariables"]["__uiPosition"].setValue( imath.V2f( 12.5253887, -17.8737144 ) )
__children["TaskContextVariables1"]["preTasks"][0].setInput( __children["PythonCommand2"]["task"] )
__children["TaskContextVariables1"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Nothing' )
__children["TaskContextVariables1"]["dispatcher"]["deadline"]["dependencyMode"].setValue( 'Auto' )
__children["TaskContextVariables1"]["variables"]["member1"]["name"].setValue( 'variation' )
__children["TaskContextVariables1"]["variables"]["member1"]["value"].setValue( 'red' )
__children["TaskContextVariables1"]["__uiPosition"].setValue( imath.V2f( 31.5277596, -17.9557514 ) )
__children["FrameMask"]["preTasks"][0].setInput( __children["TaskContextVariables"]["task"] )
__children["FrameMask"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Nothing' )
__children["FrameMask"]["dispatcher"]["deadline"]["dependencyMode"].setValue( 'Auto' )
__children["FrameMask"]["mask"].setValue( '1-15' )
__children["FrameMask"]["__uiPosition"].setValue( imath.V2f( 12.5253887, -28.0377827 ) )
__children["TestCpuThread"]["dispatcher"]["deadline"]["pool"].setValue( 'none' )
__children["TestCpuThread"]["dispatcher"]["deadline"]["secondaryPool"].setValue( 'none' )
__children["TestCpuThread"]["dispatcher"]["deadline"]["group"].setValue( 'none' )
__children["TestCpuThread"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Nothing' )
__children["TestCpuThread"]["dispatcher"]["deadline"]["dependencyMode"].setValue( 'Auto' )
__children["TestCpuThread"]["command"].setValue( 'import os\nprint os.environ["CPUTHREAD"]' )
__children["TestCpuThread"]["__uiPosition"].setValue( imath.V2f( 75.2693253, -40.962204 ) )
__children["TestGpuAffinity"]["dispatcher"]["deadline"]["pool"].setValue( 'none' )
__children["TestGpuAffinity"]["dispatcher"]["deadline"]["secondaryPool"].setValue( 'none' )
__children["TestGpuAffinity"]["dispatcher"]["deadline"]["group"].setValue( 'none' )
__children["TestGpuAffinity"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Nothing' )
__children["TestGpuAffinity"]["dispatcher"]["deadline"]["dependencyMode"].setValue( 'Auto' )
__children["TestGpuAffinity"]["command"].setValue( 'import os\nprint os.environ["GPUAFFINITY"]' )
__children["TestGpuAffinity"]["__uiPosition"].setValue( imath.V2f( 111.029617, -41.5717506 ) )
__children["Backdrop"]["title"].setValue( 'Test Dependencies' )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( 17.8493271, -26.7557545 ) )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -36.2000923, -27.9281292 ), imath.V2f( 42.2000923, 33.9281311 ) ) )
__children["Backdrop1"]["title"].setValue( 'Test CPU Thread' )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( 75.2693253, -40.962204 ) )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -8.66479492, -5.08203125 ), imath.V2f( 14.6647949, 11.0820312 ) ) )
__children["Backdrop2"]["title"].setValue( 'Test GPU Affinity' )
__children["Backdrop2"]["description"].setValue( 'Note: The Worker rendering this task must have GPU Affinity set for it in the Worker Settings of Deadline for this test to succeed.' )
__children["Backdrop2"]["__uiPosition"].setValue( imath.V2f( 108.297348, -36.3948174 ) )
__children["Backdrop2"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -8.84887695, -14.1644211 ), imath.V2f( 22.1772156, 11.0820312 ) ) )


del __children

